#!/bin/bash

cd $HOME/build

echo "Clean up..."
sudo rm -r image *.iso

echo "Create directories.."
mkdir -p image/{casper,isolinux,install}

echo "Copy vmlinuz and initrd..."
sudo cp squashfs-root/boot/vmlinuz-5.4.0-113-generic image/casper/vmlinuz
sudo cp squashfs-root/boot/initrd.img-5.4.0-113-generic image/casper/initrd

echo "Copy memtest86+..."
sudo cp squashfs-root/boot/memtest86+.bin image/install/memtest86+

touch image/ubuntu

echo "Create grub menu..."
cat <<EOF > image/isolinux/grub.cfg

search --set=root --file /ubuntu

insmod all_video

set default="0"
set timeout=30

menuentry "Try Flick OS without installing" {
   linux /casper/vmlinuz boot=casper nopersistent toram fsck.mode=skip quiet splash ---
   initrd /casper/initrd
}

menuentry "Install Flick OS" {
   linux /casper/vmlinuz boot=casper only-ubiquity fsck.mode=skip quiet splash ---
   initrd /casper/initrd
}

menuentry "Check disc for defects" {
   linux /casper/vmlinuz boot=casper integrity-check quiet splash ---
   initrd /casper/initrd
}

menuentry "Test memory Memtest86+ (BIOS)" {
   linux16 /install/memtest86+
}

menuentry "Test memory Memtest86 (UEFI, long load time)" {
   insmod part_gpt
   insmod search_fs_uuid
   insmod chain
   loopback loop /install/memtest86
   chainloader (loop,gpt1)/efi/boot/BOOTX64.efi
}
EOF

echo "Generate manifest..."
sudo chroot squashfs-root dpkg-query -W --showformat='${Package} ${Version}\n' | sudo tee image/casper/filesystem.manifest
sudo cp -v image/casper/filesystem.manifest image/casper/filesystem.manifest-desktop
sudo sed -i '/ubiquity/d' image/casper/filesystem.manifest-desktop
sudo sed -i '/casper/d' image/casper/filesystem.manifest-desktop
sudo sed -i '/discover/d' image/casper/filesystem.manifest-desktop
sudo sed -i '/laptop-detect/d' image/casper/filesystem.manifest-desktop
sudo sed -i '/os-prober/d' image/casper/filesystem.manifest-desktop

echo "Create squashfs..."
sudo mksquashfs squashfs-root image/casper/filesystem.squashfs

echo "Write filesystem.size..."
printf $(sudo du -sx --block-size=1 squashfs-root | cut -f1) > image/casper/filesystem.size

echo "Create README.diskdefines..."
cat <<EOF > image/README.diskdefines
#define DISKNAME  Flick
#define TYPE  binary
#define TYPEbinary  1
#define ARCH  amd64
#define ARCHamd64  1
#define DISKNUM  1
#define DISKNUM1  1
#define TOTALNUM  0
#define TOTALNUM0  1
EOF

cd $HOME/build/image

echo "Create a grub UEFI image..."
grub-mkstandalone \
   --format=x86_64-efi \
   --output=isolinux/bootx64.efi \
   --locales="" \
   --fonts="" \
   "boot/grub/grub.cfg=isolinux/grub.cfg"
   
echo "Create a FAT16 UEFI boot disk image containing the EFI bootloader..."
(
   cd isolinux && \
   dd if=/dev/zero of=efiboot.img bs=1M count=10 && \
   sudo mkfs.vfat efiboot.img && \
   LC_CTYPE=C mmd -i efiboot.img efi efi/boot && \
   LC_CTYPE=C mcopy -i efiboot.img ./bootx64.efi ::efi/boot/
)

echo "Create a grub BIOS image..."
grub-mkstandalone \
   --format=i386-pc \
   --output=isolinux/core.img \
   --install-modules="linux16 linux normal iso9660 biosdisk memdisk search tar ls" \
   --modules="linux16 linux normal iso9660 biosdisk search" \
   --locales="" \
   --fonts="" \
   "boot/grub/grub.cfg=isolinux/grub.cfg"
   
echo "Combine a bootable Grub cdboot.img..."
cat /usr/lib/grub/i386-pc/cdboot.img isolinux/core.img > isolinux/bios.img

echo "Generate md5sum.txt..."
sudo /bin/bash -c "(find . -type f -print0 | xargs -0 md5sum | grep -v -e 'md5sum.txt' -e 'bios.img' -e 'efiboot.img' > md5sum.txt)"

echo "Create ISO image..."

sudo xorriso \
   -as mkisofs \
   -iso-level 3 \
   -full-iso9660-filenames \
   -volid "FlickOS" \
   -output "../flickos.iso" \
   -eltorito-boot boot/grub/bios.img \
      -no-emul-boot \
      -boot-load-size 4 \
      -boot-info-table \
      --eltorito-catalog boot/grub/boot.cat \
      --grub2-boot-info \
      --grub2-mbr /usr/lib/grub/i386-pc/boot_hybrid.img \
   -eltorito-alt-boot \
      -e EFI/efiboot.img \
      -no-emul-boot \
   -append_partition 2 0xef isolinux/efiboot.img \
   -m "isolinux/efiboot.img" \
   -m "isolinux/bios.img" \
   -graft-points \
      "/EFI/efiboot.img=isolinux/efiboot.img" \
      "/boot/grub/bios.img=isolinux/bios.img" \
      "."
